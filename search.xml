<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HwTestReport：为unittest专属定制的测试报告</title>
      <link href="/hwttk-unittest-hwtestreport/"/>
      <url>/hwttk-unittest-hwtestreport/</url>
      
        <content type="html"><![CDATA[<p>作为 <a href="https://github.com/hongweifuture/HwTTK" target="_blank" rel="noopener">HwTTK（Test Tool Kit ）</a>中的一员，<code>HwTestReport</code>具有以下特性：</p><ul><li>支持<code>Python2</code>和<code>Python3</code>，自动兼容，无需设置</li><li>支持<code>中文</code>和<code>英文</code>手动切换</li><li>支持<code>Selenium</code>和<code>Appium</code>截图报告嵌入<code>Html</code>报告中，可根据需求设置开启或关闭截图展示功能</li><li>样式美化需要网络支持，采用CDN加持，如果本地使用请下载<code>离线版本</code></li><li>增加测试人员条目、通过率统计、所有可能情况筛选功能等</li><li>增加<code>饼图</code>数据展示、测试详情数据展示</li><li>增加<code>返回顶部</code>按钮</li><li>其他细节修改</li></ul><p>源自 <a href="http://tungwaiyip.info/software/HTMLTestRunner.html" target="_blank" rel="noopener">tungwaiyip.info</a> 的<code>0.82</code>版本 <code>HTMLTestRunner</code></p><p><a name="f7457af0"></a></p><h2 id="当前的环境"><a href="#当前的环境" class="headerlink" title="当前的环境"></a>当前的环境</h2><table><thead><tr><th>环境</th><th>版本</th></tr></thead><tbody><tr><td>Python2</td><td>2.7.17</td></tr><tr><td>Python3</td><td>3.7.4</td></tr><tr><td>selenium</td><td>3.141.0</td></tr><tr><td>geckodriver</td><td>v0.26.0</td></tr><tr><td>Firefox</td><td>72.0.1 (64 位)</td></tr></tbody></table><p><a name="715d8d1e"></a></p><h2 id="中英文报告实例"><a href="#中英文报告实例" class="headerlink" title="中英文报告实例"></a>中英文报告实例</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> unittest<span class="token comment" spellcheck="true"># 中文 Chinese</span><span class="token keyword">from</span> HwTestReport <span class="token keyword">import</span> HTMLTestReport<span class="token comment" spellcheck="true"># 英文 English</span><span class="token keyword">from</span> HwTestReport <span class="token keyword">import</span> HTMLTestReportEN<span class="token keyword">class</span> <span class="token class-name">Case_assert_1</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">test_ok</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_faile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_error</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token keyword">class</span> <span class="token class-name">Case_assert_2</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">test_ok</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>assertTrue<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Case_assert_3</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">test_error</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token keyword">class</span> <span class="token class-name">Case_assert_4</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">test_faile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    suite <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestSuite<span class="token punctuation">(</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_1<span class="token punctuation">(</span><span class="token string">'test_ok'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_1<span class="token punctuation">(</span><span class="token string">'test_faile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_1<span class="token punctuation">(</span><span class="token string">'test_error'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_2<span class="token punctuation">(</span><span class="token string">'test_ok'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_3<span class="token punctuation">(</span><span class="token string">'test_error'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    suite<span class="token punctuation">.</span>addTest<span class="token punctuation">(</span>Case_assert_4<span class="token punctuation">(</span><span class="token string">'test_faile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># English：HTMLTestReportEN</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'./HwTestReport.html'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> report<span class="token punctuation">:</span>        runner <span class="token operator">=</span> HTMLTestReport<span class="token punctuation">(</span>stream<span class="token operator">=</span>report<span class="token punctuation">,</span>                                verbosity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>                                title<span class="token operator">=</span><span class="token string">'HwTestReport 测试'</span><span class="token punctuation">,</span>                                description<span class="token operator">=</span><span class="token string">'带饼图，带详情'</span><span class="token punctuation">,</span>                                tester<span class="token operator">=</span><span class="token string">'Johnny'</span><span class="token punctuation">)</span>        runner<span class="token punctuation">.</span>run<span class="token punctuation">(</span>suite<span class="token punctuation">)</span></code></pre><p><a name="7ff82bce"></a></p><h2 id="带截图的报告实例"><a href="#带截图的报告实例" class="headerlink" title="带截图的报告实例"></a>带截图的报告实例</h2><p>此截图功能是针对 <a href="https://selenium.dev/downloads/" target="_blank" rel="noopener">Selenium</a>和 <a href="http://appium.io/" target="_blank" rel="noopener">Appium</a>开发，支持<code>Python2</code>和<code>Python3</code>，不同的浏览器选择不同驱动</p><ul><li><p><code>Selenium</code></p><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> seleniumconda <span class="token function">install</span> selenium</code></pre></li><li><p><code>Firefox</code></p><ul><li><a href="http://ftp.mozilla.org/pub/firefox/releases/" target="_blank" rel="noopener">火狐浏览器历史版本下载</a></li><li><a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">geckodriver驱动下载地址</a></li><li><a href="https://firefox-source-docs.mozilla.org/testing/geckodriver/Support.html" target="_blank" rel="noopener">驱动与浏览器版本对应关系总结</a></li></ul></li><li><p><code>Chrome</code>，对应版本请查看版本文件夹内的<code>note.txt</code></p><ul><li><a href="http://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">chromedriver驱动官方下载地址</a></li><li><a href="https://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">chromedriver驱动淘宝下载地址</a></li><li><a href="https://google_chrome.en.downloadastro.com/old_versions/" target="_blank" rel="noopener">Chrome浏览器历史版本下载</a></li><li><a href="https://www.slimjet.com/chrome/google-chrome-old-version.php" target="_blank" rel="noopener">驱动与浏览器版本对应关系总结</a></li></ul></li><li><p><a href="http://selenium-release.storage.googleapis.com/index.html" target="_blank" rel="noopener">IE浏览器驱动IEDriverServer</a></p></li><li><p><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/" target="_blank" rel="noopener">Edge浏览器驱动MicrosoftWebDriver</a></p></li><li><p><a href="https://github.com/operasoftware/operachromiumdriver/releases" target="_blank" rel="noopener">Opera浏览器驱动operadriver</a></p></li><li><p><a href="https://phantomjs.org/" target="_blank" rel="noopener">PhantomJS浏览器驱动：phantomjs</a></p><blockquote><p>selenium已经放弃PhantomJS，使用需将<code>selenium</code>降级为<code>2.48.0</code>版本，或者使用火狐或者谷歌无界面浏览器，推荐<a href="https://developers.google.com/web/updates/2017/04/headless-chrome" target="_blank" rel="noopener">Headless Chrome</a>，还是要了解一下<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode" target="_blank" rel="noopener">Headless Firefox</a></p></blockquote></li></ul><p>驱动需要放在和<code>python</code>启动文件在同一个目录，或添加环境变量，如</p><ul><li>windows：”D:\python\venv\Scripts\geckodriver.exe”</li><li>linux：”/opt/python/geckodriver.exe”</li></ul><p><a name="5f4ae1a6"></a></p><h3 id="截图功能使用"><a href="#截图功能使用" class="headerlink" title="截图功能使用"></a>截图功能使用</h3><ol><li><strong>增加 <code>images</code> 参数</strong>，默认为<code>False</code>，所以不需要截图可以不添加此参数，参考上面</li><li>初始化<code>imgs</code>，必须为<code>driver</code><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  self<span class="token punctuation">.</span>imgs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># （可选）初始化截图列表</span>  self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li></ol><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> unittest<span class="token keyword">from</span> HwTestReport <span class="token keyword">import</span> HTMLTestReport<span class="token keyword">from</span> HwTestReport <span class="token keyword">import</span> HTMLTestReportEN<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">class</span> <span class="token class-name">Case_baidu</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    在python3中因为unittest运行机制变动，在使用setUp/tearDown中初始化/退出driver时，    可能会出现用例执行失败没有截图的问题，但我没有遇到过，如果出现请使用setUpClass/tearDownClass的用法    '''</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_screenshot</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imgs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get_screenshot_as_base64<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">def</span> <span class="token function">test_baidu_search</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例通过，没有报告内容，有多张截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'kw'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>u<span class="token string">'百度一下'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_baidu_assert_ok</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例通过，有报告内容，有截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>        hao123 <span class="token operator">=</span> self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="u1"]/a[2]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>hao123<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>hao123<span class="token punctuation">,</span> <span class="token string">'hao123'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_baidu_assert_ok_noimg</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例通过，有报告内容，没有截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>        news <span class="token operator">=</span> self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="u1"]/a[1]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>news<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>news<span class="token punctuation">,</span> u<span class="token string">"新闻"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_baidu_assert_faile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例失败，带有失败内容和截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        news <span class="token operator">=</span> self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="u1"]/a[1]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>news<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="u1"]/a[1]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertEqual<span class="token punctuation">(</span>news<span class="token punctuation">,</span> <span class="token string">'hao123'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_baidu_assert_error</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">''''用例错误，带有指定错误内容和截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>get_screenshot<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">raise</span> EnvironmentError<span class="token punctuation">(</span><span class="token string">'Current environment can not testing!'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Case_qq</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_qq_index_faile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例错误，带有错误内容和没有截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.qq.com"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'sougouTxt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>u<span class="token string">'搜狗搜索'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># self.driver.find_element_by_id('sougouTxt').send_keys(u'搜狗搜索')</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'searchBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>assertIn<span class="token punctuation">(</span>u<span class="token string">"搜狗"</span><span class="token punctuation">,</span> u<span class="token string">'搜索'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_qq_index_ok</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''用例通过，没有内容和没有截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.qq.com"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'sougouTxt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>u<span class="token string">'搜狗搜索'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'searchBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Case_163</span><span class="token punctuation">(</span>unittest<span class="token punctuation">.</span>TestCase<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">setUp</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Firefox<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">tearDown</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">test_163_ok</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''通过 没有内容和截图'''</span>        self<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"https://www.163.com/"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    suite1 <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestLoader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loadTestsFromTestCase<span class="token punctuation">(</span>Case_baidu<span class="token punctuation">)</span>    suite2 <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestLoader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loadTestsFromTestCase<span class="token punctuation">(</span>Case_qq<span class="token punctuation">)</span>    suite3 <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestLoader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loadTestsFromTestCase<span class="token punctuation">(</span>Case_163<span class="token punctuation">)</span>    suites <span class="token operator">=</span> unittest<span class="token punctuation">.</span>TestSuite<span class="token punctuation">(</span><span class="token punctuation">)</span>    suites<span class="token punctuation">.</span>addTests<span class="token punctuation">(</span><span class="token punctuation">[</span>suite1<span class="token punctuation">,</span> suite2<span class="token punctuation">,</span> suite3<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># HTMLTestReport or HTMLTestReportEN</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'./HwTestReportIMG.html'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> report<span class="token punctuation">:</span>        runner <span class="token operator">=</span> HTMLTestReportEN<span class="token punctuation">(</span>stream<span class="token operator">=</span>report<span class="token punctuation">,</span>                                verbosity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>                                images<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                                title<span class="token operator">=</span><span class="token string">'HwTestReport 测试'</span><span class="token punctuation">,</span>                                description<span class="token operator">=</span><span class="token string">'带截图，带饼图，带详情'</span><span class="token punctuation">,</span>                                tester<span class="token operator">=</span><span class="token string">'Johnny'</span><span class="token punctuation">)</span></code></pre><p><a name="5235bc34"></a></p><h2 id="离线报告"><a href="#离线报告" class="headerlink" title="离线报告"></a>离线报告</h2><p>使用方法和上述一致，只是选择带<code>local</code>的版本即可，美化所需的样式在<code>/static/</code>目录下，故<code>/static/</code>目录要和<code>生成的报告在相同目录</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> unittest<span class="token keyword">from</span> HwTestReport_local <span class="token keyword">import</span> HTMLTestReport<span class="token keyword">from</span> HwTestReport_local <span class="token keyword">import</span> HTMLTestReportEN</code></pre><p><a name="19ef7f9b"></a></p><h2 id="关键字说明"><a href="#关键字说明" class="headerlink" title="关键字说明"></a>关键字说明</h2><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>HTMLTestReport.py</td><td>源文件</td></tr><tr><td>HTMLTestReport_local.py</td><td>离线源文件</td></tr><tr><td>HTMLTestReport</td><td>生成中文报告的类</td></tr><tr><td>HTMLTestReportEN</td><td>生成英文报告的类</td></tr><tr><td>stream</td><td>生成的报告文件</td></tr><tr><td>verbosity</td><td>运行之后打印的格式，默认值为1，有0，1，2三个值，<br />0 (静默模式): 你只能获得总的测试用例数和总的结果 比如 总共100个 失败20 成功80<br />)1 (默认模式): 非常类似静默模式 只是在每个成功的用例前面有个“.” 每个失败的用例前面有个 “F”<br />2 (详细模式):测试结果会显示每个测试用例的所有相关的信息,并且你在命令行里加入不同的参数可以起到一样的效果，<br />源码在/Lib/unittest/runner.py</td></tr><tr><td>images</td><td>True 为开启Selenium或Appium截图，False或不填为关闭截图模式</td></tr><tr><td>title</td><td>标题，不填默认为“测试报告”</td></tr><tr><td>description</td><td>描述，不填默认为空</td></tr><tr><td>tester</td><td>测试人员，不填默认为“Johnny”</td></tr></tbody></table><p><a name="645dbc55"></a></p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="https://cdn.nlark.com/yuque/0/2020/png/373062/1581754110301-9cc7a54c-c520-4eb1-8057-cbed51568b51.png#align=left&display=inline&height=768&originHeight=768&originWidth=1366&size=0&status=done&style=none&width=1366" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/373062/1581754110335-25228bae-5ea7-42a4-ad1d-fcd75662057a.png#align=left&display=inline&height=768&originHeight=768&originWidth=1366&size=0&status=done&style=none&width=1366" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/373062/1581754110321-e40d8ba9-5086-4084-b6c4-62d3fcf8a800.png#align=left&display=inline&height=768&originHeight=768&originWidth=1366&size=0&status=done&style=none&width=1366" alt=""></p><p>欢迎关注：</p><ul><li><a href="https://github.com/hongweifuture/HwTestReport" target="_blank" rel="noopener">该项目所在Github及源码下载地址</a></li><li><a href="https://github.com/hongweifuture" target="_blank" rel="noopener">Github</a></li><li><a href="https://blog.csdn.net/z_johnny" target="_blank" rel="noopener">CSDN</a></li><li><a href="https://www.zhwei.cn/">My Blog</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> HwTTK </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTMLTestRunner </tag>
            
            <tag> unittest </tag>
            
            <tag> python </tag>
            
            <tag> Appium </tag>
            
            <tag> Selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 教程：单表查询</title>
      <link href="/databases-mysql-singl-query/"/>
      <url>/databases-mysql-singl-query/</url>
      
        <content type="html"><![CDATA[<p><a name="3cb64573"></a></p><h1 id="创建数据库并插入数据"><a href="#创建数据库并插入数据" class="headerlink" title="创建数据库并插入数据"></a>创建数据库并插入数据</h1><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 创建表，数据类型请自行查询</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> fruits <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  sid <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  NAME CHAR<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  price <span class="token keyword">DECIMAL</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 表中插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> fruits<span class="token keyword">VALUES</span>  <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token number">5.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'blackberry'</span><span class="token punctuation">,</span> <span class="token number">10.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token number">11.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token string">'melon'</span><span class="token punctuation">,</span> <span class="token number">8.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token number">10.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'grape'</span><span class="token punctuation">,</span> <span class="token number">5.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">'coconut'</span><span class="token punctuation">,</span> <span class="token number">9.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'cherry'</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">'apricot'</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">'berry'</span><span class="token punctuation">,</span> <span class="token number">7.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token number">15.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="4178536f"></a></p><h1 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h1><p><a name="9f380f34"></a></p><h2 id="查询所有字段"><a href="#查询所有字段" class="headerlink" title="查询所有字段"></a>查询所有字段</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>id    sid    name    price<span class="token number">1</span>    <span class="token number">101</span>    apple    <span class="token number">5.20</span><span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span><span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">8</span>    <span class="token number">101</span>    cherry    <span class="token number">3.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre><p><a name="5fae6f01"></a></p><h2 id="查询指定字段"><a href="#查询指定字段" class="headerlink" title="查询指定字段"></a>查询指定字段</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> ID<span class="token punctuation">,</span>NAME <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>ID    NAME<span class="token number">1</span>    apple<span class="token number">2</span>    blackberry<span class="token number">3</span>    orange<span class="token number">4</span>    melon<span class="token number">5</span>    banana<span class="token number">6</span>    grape<span class="token number">7</span>    coconut<span class="token number">8</span>    cherry<span class="token number">9</span>    apricot<span class="token number">10</span>    lemon<span class="token number">11</span>    berry<span class="token number">12</span>    mango</code></pre><p><a name="920db34f"></a></p><h2 id="查询指定条件的字段"><a href="#查询指定条件的字段" class="headerlink" title="查询指定条件的字段"></a>查询指定条件的字段</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'BANANA'</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span></code></pre><p><a name="a6bf5c47"></a></p><h2 id="带IN关键字的查询"><a href="#带IN关键字的查询" class="headerlink" title="带IN关键字的查询"></a>带IN关键字的查询</h2><p>IN关键字：IN(xx，yy，…) 满足条件范围内的一个值即为匹配项，括号内的值，或的关系</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> NAME <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">'BANANA'</span><span class="token punctuation">,</span><span class="token string">'ORANGE'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">1</span>    <span class="token number">101</span>    apple    <span class="token number">5.20</span><span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span><span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre><p><a name="0e7df0eb"></a></p><h2 id="带BETWEEN-AND-的范围查询"><a href="#带BETWEEN-AND-的范围查询" class="headerlink" title="带BETWEEN AND 的范围查询"></a>带BETWEEN AND 的范围查询</h2><p>BETWEEN … AND … : 在…到…范围内的值即为匹配项</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token operator">BETWEEN</span> <span class="token number">3</span> <span class="token operator">AND</span> <span class="token number">9</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span><span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">8</span>    <span class="token number">101</span>    cherry    <span class="token number">3.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token operator">NOT</span> <span class="token operator">BETWEEN</span> <span class="token number">5</span> <span class="token operator">AND</span> <span class="token number">11</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">1</span>    <span class="token number">101</span>    apple    <span class="token number">5.20</span><span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre><p><a name="818fed55"></a></p><h2 id="带LIKE的字符匹配查询"><a href="#带LIKE的字符匹配查询" class="headerlink" title="带LIKE的字符匹配查询"></a>带LIKE的字符匹配查询</h2><p>LIKE: 模糊查询，和LIKE一起使用的通配符有  “%”、”_”</p><table><thead><tr><th>通配符</th><th>功能</th></tr></thead><tbody><tr><td>“%”</td><td>作用是能匹配任意长度的字符。</td></tr><tr><td>“_”</td><td>只能匹配任意一个字符</td></tr></tbody></table><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">'black%'</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">'b%y'</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> NAME <span class="token operator">LIKE</span> <span class="token string">'_ER_Y'</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span></code></pre><p><a name="6483b0de"></a></p><h1 id="逻辑与之带AND的多条件查询"><a href="#逻辑与之带AND的多条件查询" class="headerlink" title="逻辑与之带AND的多条件查询"></a>逻辑与之带AND的多条件查询</h1><p>and：同时满足条件</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>  <span class="token operator">*</span><span class="token keyword">FROM</span>  fruits<span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token operator">AND</span> sid <span class="token operator">></span> <span class="token number">102</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span></code></pre><p><a name="0c255859"></a></p><h1 id="逻辑或之OR的多条件查询"><a href="#逻辑或之OR的多条件查询" class="headerlink" title="逻辑或之OR的多条件查询"></a>逻辑或之OR的多条件查询</h1><p>OR:有一个满足即可，类似in</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>  <span class="token operator">*</span><span class="token keyword">FROM</span>  fruits<span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token operator">OR</span> sid <span class="token operator">></span> <span class="token number">102</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">8</span>    <span class="token number">101</span>    cherry    <span class="token number">3.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre><p><a name="f7a4de5c"></a></p><h1 id="关键字DISTINCT查询不重复的数据"><a href="#关键字DISTINCT查询不重复的数据" class="headerlink" title="关键字DISTINCT查询不重复的数据"></a>关键字DISTINCT查询不重复的数据</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>  <span class="token keyword">DISTINCT</span> SID<span class="token keyword">FROM</span>  fruits<span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token operator">OR</span> sid <span class="token operator">></span> <span class="token number">102</span><span class="token punctuation">;</span>SID<span class="token number">101</span><span class="token number">105</span><span class="token number">102</span><span class="token number">103</span><span class="token number">104</span><span class="token number">106</span></code></pre><p><a name="e955e677"></a></p><h1 id="ORDER-BY对查询的结果排序"><a href="#ORDER-BY对查询的结果排序" class="headerlink" title="ORDER BY对查询的结果排序"></a>ORDER BY对查询的结果排序</h1><p><a name="55a66792"></a></p><h2 id="ORDER-BY-字段-DESC-逆序排列"><a href="#ORDER-BY-字段-DESC-逆序排列" class="headerlink" title="ORDER BY 字段 DESC 逆序排列"></a>ORDER BY 字段 DESC 逆序排列</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>  SID<span class="token keyword">FROM</span>  fruits<span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token operator">OR</span> sid <span class="token operator">></span> <span class="token number">102</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sid <span class="token keyword">DESC</span><span class="token punctuation">;</span>SID<span class="token number">106</span><span class="token number">105</span><span class="token number">104</span><span class="token number">103</span><span class="token number">102</span><span class="token number">101</span></code></pre><p><a name="f4ef5c03"></a></p><h2 id="ORDER-BY-字段-ASC-正序排列，默认为正"><a href="#ORDER-BY-字段-ASC-正序排列，默认为正" class="headerlink" title="ORDER BY 字段 ASC 正序排列，默认为正"></a>ORDER BY 字段 ASC 正序排列，默认为正</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>  SID<span class="token keyword">FROM</span>  fruits<span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token operator">OR</span> sid <span class="token operator">></span> <span class="token number">102</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sid <span class="token keyword">ASC</span><span class="token punctuation">;</span>SID<span class="token number">101</span><span class="token number">102</span><span class="token number">103</span><span class="token number">104</span><span class="token number">105</span><span class="token number">106</span></code></pre><p><a name="a8aa86da"></a></p><h1 id="GROUP-BY-对查询结果进行分组"><a href="#GROUP-BY-对查询结果进行分组" class="headerlink" title="GROUP BY 对查询结果进行分组"></a>GROUP BY 对查询结果进行分组</h1><p><a name="c84edd03"></a></p><h2 id="不分组"><a href="#不分组" class="headerlink" title="不分组"></a>不分组</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> SID <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>SID<span class="token number">101</span><span class="token number">101</span><span class="token number">102</span><span class="token number">105</span><span class="token number">102</span><span class="token number">102</span><span class="token number">103</span><span class="token number">101</span><span class="token number">103</span><span class="token number">104</span><span class="token number">104</span><span class="token number">106</span></code></pre><p><a name="c7a11bc9"></a></p><h2 id="将相同的内容分到同一个组里面"><a href="#将相同的内容分到同一个组里面" class="headerlink" title="将相同的内容分到同一个组里面"></a>将相同的内容分到同一个组里面</h2><blockquote><p>分组之后，重复的都被分到一组</p></blockquote><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> SID <span class="token keyword">FROM</span> fruits <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> SID <span class="token punctuation">;</span>SID<span class="token number">101</span><span class="token number">102</span><span class="token number">105</span><span class="token number">103</span><span class="token number">104</span><span class="token number">106</span></code></pre><p><a name="4b3bf9cc"></a></p><h2 id="GROUP-CONCAT查看分组后的数目和内容"><a href="#GROUP-CONCAT查看分组后的数目和内容" class="headerlink" title="GROUP_CONCAT查看分组后的数目和内容"></a>GROUP_CONCAT查看分组后的数目和内容</h2><p>查看分组中的各个字段内容 GROUP_CONCAT( )</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> SID<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>NAME<span class="token punctuation">)</span><span class="token punctuation">,</span>GROUP_CONCAT<span class="token punctuation">(</span>NAME<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sid<span class="token punctuation">;</span>SID    <span class="token function">count</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    group_concat<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token number">101</span>    <span class="token number">3</span>    apple<span class="token punctuation">,</span>blackberry<span class="token punctuation">,</span>cherry<span class="token number">102</span>    <span class="token number">3</span>    orange<span class="token punctuation">,</span>banana<span class="token punctuation">,</span>grape<span class="token number">103</span>    <span class="token number">2</span>    coconut<span class="token punctuation">,</span>apricot<span class="token number">104</span>    <span class="token number">2</span>    lemon<span class="token punctuation">,</span>berry<span class="token number">105</span>    <span class="token number">1</span>    melon<span class="token number">106</span>    <span class="token number">1</span>    mango</code></pre><p><a name="cf7eeef3"></a></p><h2 id="HAVING条件过滤，相当于WHERE，只能分组用"><a href="#HAVING条件过滤，相当于WHERE，只能分组用" class="headerlink" title="HAVING条件过滤，相当于WHERE，只能分组用"></a>HAVING条件过滤，相当于WHERE，只能分组用</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> SID<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>NAME<span class="token punctuation">)</span><span class="token punctuation">,</span>GROUP_CONCAT<span class="token punctuation">(</span>NAME<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sid <span class="token keyword">HAVING</span> SID <span class="token operator">></span> <span class="token number">103</span><span class="token punctuation">;</span>SID    <span class="token function">count</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    group_concat<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token number">104</span>    <span class="token number">2</span>    lemon<span class="token punctuation">,</span>berry<span class="token number">105</span>    <span class="token number">1</span>    melon<span class="token number">106</span>    <span class="token number">1</span>    mango</code></pre><p><a name="6c4701bd"></a></p><h1 id="LIMIT-限制查询结果的数量"><a href="#LIMIT-限制查询结果的数量" class="headerlink" title="LIMIT 限制查询结果的数量"></a>LIMIT 限制查询结果的数量</h1><blockquote><p>LIMIT 位置偏移量,行数<br>默认位置偏移量为0，即第1行</p></blockquote><p>通过LIMIT可以选择数据库表中的任意行数，也就是不用从第一条记录开始遍历，可以直接拿到 第5条到第10条的记录，也可以直接拿到第12到第15条的记录。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">1</span>    <span class="token number">101</span>    apple    <span class="token number">5.20</span><span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">;</span>id    sid    name    price<span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">8</span>    <span class="token number">101</span>    cherry    <span class="token number">3.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> databases </tag>
            
            <tag> 数据库 </tag>
            
            <tag> web </tag>
            
            <tag> sql单表查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 教程：基础语句</title>
      <link href="/databases-mysql-base-sql/"/>
      <url>/databases-mysql-base-sql/</url>
      
        <content type="html"><![CDATA[<p><a name="6c182d8d"></a></p><h1 id="数据库基础操作"><a href="#数据库基础操作" class="headerlink" title="数据库基础操作"></a>数据库基础操作</h1><p><a name="2aae13df"></a></p><h2 id="开启MySQL服务"><a href="#开启MySQL服务" class="headerlink" title="开启MySQL服务"></a>开启MySQL服务</h2><pre class=" language-bash"><code class="language-bash">net start mysql</code></pre><p><a name="84e9143c"></a></p><h2 id="关闭MySQL服务"><a href="#关闭MySQL服务" class="headerlink" title="关闭MySQL服务"></a>关闭MySQL服务</h2><pre class=" language-bash"><code class="language-bash">net stop mysql</code></pre><p><a name="adc3184e"></a></p><h2 id="登陆MySQL"><a href="#登陆MySQL" class="headerlink" title="登陆MySQL"></a>登陆MySQL</h2><pre class=" language-bash"><code class="language-bash">mysql -u帐号　-p 输入密码mysql -uroot -p</code></pre><p><a name="43a4cf3e"></a></p><h2 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span></code></pre><p><a name="cecae436"></a></p><h2 id="创建数据"><a href="#创建数据" class="headerlink" title="创建数据"></a>创建数据</h2><pre class=" language-sql"><code class="language-sql"> <span class="token keyword">create</span> <span class="token keyword">database</span> zhao <span class="token keyword">charset</span> utf8<span class="token punctuation">;</span></code></pre><p><a name="17d6bfc2"></a></p><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">database</span> ZHAO<span class="token punctuation">;</span></code></pre><p><a name="e9273484"></a></p><h1 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h1><p><a name="5d89fefc"></a></p><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><pre><code>格式：CREATE TABLE 数据表名(字段名1　　数据类型[列级别约束条件],字段名2　　数据类型[列级别约束条件],字段名3　　数据类型[列级别约束条件]);</code></pre><p>注意：格式不一定需要这样隔着写，完全可以全部写成一行。但是那样写可观性非常差。我这样写只是为了可以看的更清晰。</p><p>解释：1、[ ]中括号中的内容表示可以有可以没有，2、列级别这个“列”一定要搞清楚说的是什么，一张表中有行有列，列表示竖，行表示横　3、约束条件后面会讲到</p><p><a name="570b6fa5"></a></p><h2 id="创建没有约束的student表"><a href="#创建没有约束的student表" class="headerlink" title="创建没有约束的student表"></a>创建没有约束的student表</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> age <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>注释：SHOW TABLES 可以查询数据库底下的所有表。</p><p><a name="1afe2f93"></a></p><h2 id="创建有约束的student表"><a href="#创建有约束的student表" class="headerlink" title="创建有约束的student表"></a>创建有约束的student表</h2><ul><li>主键约束</li><li>外键约束</li><li>非空约束</li><li>唯一约束</li><li>默认约束</li><li>自动增加</li></ul><p><a name="26361348"></a></p><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><p><strong>PRIMARY KEY(primary key)</strong></p><p>独一无二(唯一)和不能为空(非空)，通俗的讲，就是在表中增加记录时，在该字段下的数据不能重复，不能为空，比如以上面创建的表为例子，在表中增加两条记录，如果id字段用了主键约束。则id不能一样，并且不能为空。一般每张表中度有一个字段为主键，唯一标识这条记录。以后需要找到该条记录也可以同这个主键来确认记录，因为主键是唯一的，并且非空，一张表中每个记录的主键度不一样，所以根据主键也就能找到对应的记录。而不是多条重复的记录。如果没有主键，那么表中就会存在很多重复的记录，那么即浪费存储空间，在查询时也消耗更多资源。</p><p>一般被主键约束了的字段度习惯性的称该字段为该表的主键</p><p><strong>单字段主键约束</strong></p><p>两种方式都可以</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age  <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>多字段主键约束(复合主键)</strong></p><p>这个id和name都市主键，说明在以后增加的插入的记录中，id和name不能同时一样，比如说可以是这样。一条记录为id=1，name=yyy、另一条记录为：id=1，name=zzz。 这样是可以的。并不是你们所理解的两个字段分别度不可以相同。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>age  <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>age <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>NAME<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="499c95f9"></a></p><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><p>什么是外键举个例子就清楚了，有两张表，一张表是emp(员工)表，另一张表是dept(部门)表，一个员工属于一个部门，那么如何通过员工能让我们自己他在哪个部门呢？那就只能在员工表中增加一个字段，能代表员工所在的部门，那该字段就只能是存储dept中的主键了(因为主键是唯一的，才能确实是哪个部门，进而代表员工所在的部门，如果是部门名称，有些部门的名称可能是同名。就不能区分了。)，像这样的字段，就符合外键的特点，就可以使用外键约束，使该字段只能够存储另一张表的主键。如果不被外键约束，那么该字段就无法保证存储进来的值就一定是另一张表的主键值。</p><p><strong>外键约束的特点</strong></p><ol><li>外键约束可以描述任意一个字段(包括主键)，可以为空，并且一个表中可以有多个外键。但是外键字段中的值必须是另一张表中的主键。</li><li>这样被外键关联的两种表的关系可以称为父子表或者主从表。子表(从表)拥有外键字段的表，父表(主表)被外键字段所指向的表。</li><li>子表被外键约束修饰的字段必须和父表的主键字段的类型一样。</li></ol><p>注意：一个表中有被外键修饰的字段，就称该表有外键(是“有外键”。而不是“是外键”)，并会给该表中的外键约束取一个名称，所以我们常说的这个表有没有外键，指的不是被外键约束修饰的字段名，而是指这个表是否有存在外键约束。也就是说，不能说这个表的外键是xxx(该表中被外键约束修饰的字段名)，这种说法是错误的，但是大多数人已经习惯了这样，虽然影响不大，但是在很多时候需要理解一个东西时，会造成一定的困扰。</p><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">CONSTRAINT</span>　　外键名称　　<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>被外键约束的字段名称<span class="token punctuation">)</span>　　<span class="token keyword">REFERENCES</span>  主表名<span class="token punctuation">(</span>主键字段<span class="token punctuation">)</span>英文解释：<span class="token keyword">CONSTRAINT</span>:约束　　　　<span class="token keyword">REFERENCES</span>:参考</code></pre><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentA <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  location <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentB <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  deptId <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">CONSTRAINT</span> tableA_tableB_1 FOREIGH <span class="token keyword">KEY</span> <span class="token punctuation">(</span>deptId<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tableA <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>解释：tableB中有一个名为tableA_tableB_1的外键关联了tableA和tableB两个表，被外键约束修饰的字段为tableB中的deptId，主键字段为tableA中的id</p><p><a name="e96c3ec1"></a></p><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><p><strong>NOT NULL</strong></p><p>被该约束修饰了的字段，就不能为空，主键约束中就包括了这个约束</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentA <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  location <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="e70693bd"></a></p><h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><p><strong>UNIQUE</strong></p><p>被唯一约束修饰了的字段，表示该字段中的值唯一，不能有相同的值，通俗点讲，就好比插入两条记录，这两条记录中处于该字段的值不能是一样的。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentA <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span>  location <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>也就是说在插入的记录中，每条记录的name值不能是一样的。</p><p><a name="bae9105a"></a></p><h3 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h3><p><strong>Default</strong></p><p>指定这一列的默认值为多少，比如，男性同学比较多，性别就可以设置为默认男，如果插入一行记录时，性别没有填，那么就默认加上</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentA <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  eptId <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">1111</span><span class="token punctuation">,</span>  salary <span class="token keyword">FLOAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="f9f952f0"></a></p><h3 id="自动增加"><a href="#自动增加" class="headerlink" title="自动增加"></a>自动增加</h3><p><strong>AUTO_INCREMENT</strong></p><p>一个表只能一个字段使用AUTO_INCREMENT，并且使用这个约束的字段只能是整数类型(任意的整数类型     TINYINT,SMALLIN,INT,BIGINT)，默认值是1，也就是说从1开始增加的。一般就是给主键使用的，自动增加，使每个主键的值度不一样，并且不用我们自己管理，让主键自己自动生成</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> studentA <span class="token punctuation">(</span>  id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="b13411d7"></a></p><h2 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h2><p><a name="6d13e1b7"></a></p><h3 id="查看表基本结构语句"><a href="#查看表基本结构语句" class="headerlink" title="查看表基本结构语句"></a>查看表基本结构语句</h3><pre class=" language-sql"><code class="language-sql">格式<span class="token number">1</span>：<span class="token keyword">DESCRIBE</span> 表名<span class="token keyword">DESCRIBE</span>　student<span class="token punctuation">;</span>格式<span class="token number">2</span>：<span class="token keyword">DESC</span> 表名<span class="token keyword">DESC</span> student<span class="token punctuation">;</span></code></pre><p><a name="f821026d"></a></p><h3 id="查看创建表的语句"><a href="#查看创建表的语句" class="headerlink" title="查看创建表的语句"></a>查看创建表的语句</h3><pre class=" language-sql"><code class="language-sql">格式<span class="token number">1</span>：<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">;</span>格式<span class="token number">2</span>：<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名\G<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student\G<span class="token punctuation">;</span></code></pre><p><a name="dc15d5f9"></a></p><h2 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h2><p>修改数据表包括：对表中字段的增加、删除、修改。  在这个里面用的关键字为 ALTER</p><p><a name="9adf412d"></a></p><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>旧表名<span class="token operator">></span> <span class="token keyword">RENAME</span><span class="token punctuation">[</span><span class="token keyword">TO</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>新表名<span class="token operator">></span><span class="token punctuation">;</span>将student表名改为student1<span class="token punctuation">(</span>改完后在改回来<span class="token punctuation">)</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> student1<span class="token punctuation">;</span></code></pre><p><a name="f1b0e939"></a></p><h3 id="修改表中的字段名"><a href="#修改表中的字段名" class="headerlink" title="修改表中的字段名"></a>修改表中的字段名</h3><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span> CHANGE<span class="token operator">&lt;</span>旧字段名<span class="token operator">></span><span class="token operator">&lt;</span>新字段名<span class="token operator">></span><span class="token operator">&lt;</span>新数据类型<span class="token operator">></span>将student表中的name字段名改为 username<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student CHANGE name username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>解释：这个不仅能改变字段名，还能将字段的数据类型一并修改，也就是说，你可以单纯的只修改字段名，也可以单纯的只修改数据类型，也可以同时一起修改</p><p><a name="d6c757dd"></a></p><h3 id="修改表中的数据类型"><a href="#修改表中的数据类型" class="headerlink" title="修改表中的数据类型"></a>修改表中的数据类型</h3><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span> <span class="token keyword">MODIFY</span><span class="token operator">&lt;</span>字段名<span class="token operator">></span><span class="token operator">&lt;</span>数据类型<span class="token operator">></span>　　　　　　　　　　　　　<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">MODIFY</span> username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>解释：只能修改字段名的数据类型，但是其原理跟上面change做的事情一样，这里也有修改字段名的过程，只不过修改后的字段名和修改前的字段名相同，但是数据类型不一样。</p><p><a name="bbef47b6"></a></p><h3 id="修改字段的排列位置"><a href="#修改字段的排列位置" class="headerlink" title="修改字段的排列位置"></a>修改字段的排列位置</h3><pre class=" language-sql"><code class="language-sql">方式<span class="token number">1</span>：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span> <span class="token keyword">MODIFY</span><span class="token operator">&lt;</span>字段<span class="token number">1</span><span class="token operator">></span><span class="token operator">&lt;</span>数据类型<span class="token operator">></span> <span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span><span class="token operator">&lt;</span>字段<span class="token number">2</span><span class="token operator">></span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">MODIFY</span> username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">AFTER</span> age<span class="token punctuation">;</span></code></pre><p>解释：将字段1的位置放到第一，或者放到指定字段2的后面</p><pre class=" language-sql"><code class="language-sql">方式<span class="token number">2</span>：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span> CHANGE<span class="token operator">&lt;</span>字段<span class="token number">1</span><span class="token operator">></span><span class="token operator">&lt;</span>字段<span class="token number">2</span><span class="token operator">></span><span class="token operator">&lt;</span>数据类型<span class="token operator">></span> <span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span><span class="token operator">&lt;</span>字段<span class="token number">3</span><span class="token operator">></span>　<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student CHANGE username username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">AFTER</span> age<span class="token punctuation">;</span></code></pre><p>解释：其实是一样的，将是字段2覆盖字段1，然后在进行排序</p><p><strong>总结</strong></p><p>CHANGE和MODIFY的区别？</p><p>原理都是一样的，MODIFY只能修改数据类型，但是CHANGE能够修改数据类型和字段名，也就是说MODIFY是CHANGE的更具体化的一个操作。可能觉得用CHANGE只改变一个数据类型不太爽，就增加了一个能直接改数据类型的使用关键字MODIFY来操作。</p><p><a name="4484fa04"></a></p><h2 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a>添加字段</h2><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名称<span class="token operator">></span> <span class="token keyword">ADD</span><span class="token operator">&lt;</span>新字段名<span class="token operator">></span><span class="token operator">&lt;</span>数据类型<span class="token operator">></span><span class="token punctuation">[</span>约束条件<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span><span class="token operator">&lt;</span>已存在的表名<span class="token operator">></span><span class="token punctuation">]</span>解释：在一个特定位置增加一个新的字段，如果不指定位置，默认是最后一个。<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">ADD</span> sex <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="1cfd4c81"></a></p><h2 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h2><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名称<span class="token operator">></span> <span class="token keyword">DROP</span><span class="token operator">&lt;</span>字段名<span class="token operator">></span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">DROP</span> sex<span class="token punctuation">;</span></code></pre><p><a name="b47f56e0"></a></p><h2 id="删除表的外键约束"><a href="#删除表的外键约束" class="headerlink" title="删除表的外键约束"></a>删除表的外键约束</h2><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名称<span class="token operator">></span> <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token operator">&lt;</span>外键约束名<span class="token operator">></span></code></pre><p>注意：外键约束名 指的不是被外键约束修饰的字段名，切记，而是我们在创建外键约束关系时取的名字。</p><p><a name="0498ba16"></a></p><h2 id="更改表的存储引擎"><a href="#更改表的存储引擎" class="headerlink" title="更改表的存储引擎"></a>更改表的存储引擎</h2><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token operator">&lt;</span>更改后的存储引擎名<span class="token operator">></span></code></pre><p>这个存储引擎目前我自己也不太清楚，虽然知道有哪几种引擎，但是稍微深入一点就不清楚了，所以打算留到日后在说。</p><p><a name="0849f91a"></a></p><h1 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h1><p><a name="2fab1f77"></a></p><h2 id="删除无关联表"><a href="#删除无关联表" class="headerlink" title="删除无关联表"></a>删除无关联表</h2><pre class=" language-sql"><code class="language-sql">格式：<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span><span class="token operator">&lt;</span>表名<span class="token operator">></span>；<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">;</span></code></pre><p><a name="8b4e771e"></a></p><h2 id="删除被其他表关联的主表"><a href="#删除被其他表关联的主表" class="headerlink" title="删除被其他表关联的主表"></a>删除被其他表关联的主表</h2><p>这个是比较重要的一点，在有外键关联关系的两张表中，如果删除主表，那么是删不掉的，并且会报错。因为有张表依赖于他。那怎么办呢？针对这种情况，总共有两种方法</p><ol><li>先删除你子表，然后在删除父表，这样就达到了删除父表的目的，但是子表也要被删除</li><li>先解除外键关系，然后在删除父表，这样也能达到目的，并且保留了子表，只删除我们不需要的父表。在3.7中就讲解了如何删除外键关系。</li></ol><p><a name="25f9c7fa"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>讲了这么多，但实际中，用到的并不是很多，特别是对表结构的修改的操作，在实际开发中，一般数据库表被定义下来了，就不会在修改了，发现数据库表设计的不好，也是将表全部删除，然后在重新创建过新表。但是在我们学习的过程中，这些操作还是很重要的，因为需要这些基础来学习后面更深入的东西，不可能因为实际中不用，就不学这不学那，要相信，不管做什么，那肯定是有意义的事情，可能那意义并不大，但是日后肯定会对我们有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> databases </tag>
            
            <tag> 数据库 </tag>
            
            <tag> web </tag>
            
            <tag> sql基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 教程：多表查询</title>
      <link href="/databases-mysql-many-query/"/>
      <url>/databases-mysql-many-query/</url>
      
        <content type="html"><![CDATA[<p><a name="3cb64573"></a></p><h1 id="创建数据库并插入数据"><a href="#创建数据库并插入数据" class="headerlink" title="创建数据库并插入数据"></a>创建数据库并插入数据</h1><p><a name="cd857cef"></a></p><h2 id="表一，fruits，水果"><a href="#表一，fruits，水果" class="headerlink" title="表一，fruits，水果"></a>表一，fruits，水果</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 创建表，数据类型请自行查询</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> fruits <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  sid <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  NAME CHAR<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  price <span class="token keyword">DECIMAL</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 表中插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> fruits<span class="token keyword">VALUES</span>  <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token number">5.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'blackberry'</span><span class="token punctuation">,</span> <span class="token number">10.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token number">11.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token string">'melon'</span><span class="token punctuation">,</span> <span class="token number">8.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token number">10.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">'grape'</span><span class="token punctuation">,</span> <span class="token number">5.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">'coconut'</span><span class="token punctuation">,</span> <span class="token number">9.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">'cherry'</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">'apricot'</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">'lemon'</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">'berry'</span><span class="token punctuation">,</span> <span class="token number">7.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'12'</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token string">'mango'</span><span class="token punctuation">,</span> <span class="token number">15.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token string">'13'</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token string">'HHHHHH'</span><span class="token punctuation">,</span> <span class="token number">12.6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="3317a667"></a></p><h2 id="表二，suppliers，供应商"><a href="#表二，suppliers，供应商" class="headerlink" title="表二，suppliers，供应商"></a>表二，suppliers，供应商</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> suppliers <span class="token punctuation">(</span>  sid <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  sName CHAR<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  city CHAR<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  zip CHAR<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  scall CHAR<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>sid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> suppliers<span class="token keyword">VALUES</span>  <span class="token punctuation">(</span>    <span class="token number">101</span><span class="token punctuation">,</span>    <span class="token string">'Supplies A'</span><span class="token punctuation">,</span>    <span class="token string">'Tianjin'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'18075'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">102</span><span class="token punctuation">,</span>    <span class="token string">'Supplies B'</span><span class="token punctuation">,</span>    <span class="token string">'Chongqing'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'44333'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">103</span><span class="token punctuation">,</span>    <span class="token string">'Supplies C'</span><span class="token punctuation">,</span>    <span class="token string">'Shanghai'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'90046'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">104</span><span class="token punctuation">,</span>    <span class="token string">'Supplies D'</span><span class="token punctuation">,</span>    <span class="token string">'Zhongshan'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'11111'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">105</span><span class="token punctuation">,</span>    <span class="token string">'Supplies E'</span><span class="token punctuation">,</span>    <span class="token string">'Taiyuang'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'22222'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">106</span><span class="token punctuation">,</span>    <span class="token string">'Supplies F'</span><span class="token punctuation">,</span>    <span class="token string">'Beijing'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'45678'</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>    <span class="token number">107</span><span class="token punctuation">,</span>    <span class="token string">'Supplies G'</span><span class="token punctuation">,</span>    <span class="token string">'Zhengzhou'</span><span class="token punctuation">,</span>    <span class="token string">'400000'</span><span class="token punctuation">,</span>    <span class="token string">'33332'</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="37722d2d"></a></p><h2 id="表3，顾客"><a href="#表3，顾客" class="headerlink" title="表3，顾客"></a>表3，顾客</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> people <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  num <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  CITY <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> people<span class="token keyword">VALUES</span>  <span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'Shanghai'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'TIANJIN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'BEIJING'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">'NANCHANG'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token string">'NANJING'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'6'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'JIANGXI'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'7'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'SHENZHEN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'8'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token string">'WUHAN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">,</span> <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token string">'GUANZHOU'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">'10'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">'LIAONING'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a name="21ba516d"></a></p><h1 id="普通双表查询"><a href="#普通双表查询" class="headerlink" title="普通双表查询"></a>普通双表查询</h1><p>查询水果的供应商编码、名字即对应的水果名称和价格</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token number">f</span><span class="token punctuation">.</span>SID<span class="token punctuation">,</span>S<span class="token punctuation">.</span>SNAME<span class="token punctuation">,</span>F<span class="token punctuation">.</span>name<span class="token punctuation">,</span>F<span class="token punctuation">.</span>price <span class="token keyword">FROM</span> fruits <span class="token keyword">AS</span> <span class="token number">f</span> <span class="token punctuation">,</span>suppliers <span class="token keyword">AS</span> S <span class="token keyword">WHERE</span> F<span class="token punctuation">.</span>SID <span class="token operator">=</span>S<span class="token punctuation">.</span>SID<span class="token punctuation">;</span>SID    SNAME    name    price<span class="token number">101</span>    Supplies A    apple    <span class="token number">5.20</span><span class="token number">101</span>    Supplies A    blackberry    <span class="token number">10.20</span><span class="token number">102</span>    Supplies B    orange    <span class="token number">11.20</span><span class="token number">105</span>    Supplies E    melon    <span class="token number">8.20</span><span class="token number">102</span>    Supplies B    banana    <span class="token number">10.30</span><span class="token number">102</span>    Supplies B    grape    <span class="token number">5.30</span><span class="token number">103</span>    Supplies C    coconut    <span class="token number">9.20</span><span class="token number">101</span>    Supplies A    cherry    <span class="token number">3.20</span><span class="token number">103</span>    Supplies C    apricot    <span class="token number">2.20</span><span class="token number">104</span>    Supplies D    lemon    <span class="token number">6.40</span><span class="token number">104</span>    Supplies D    berry    <span class="token number">7.60</span><span class="token number">106</span>    Supplies F    mango    <span class="token number">15.60</span></code></pre><p><a name="301f3da4"></a></p><h1 id="内连接，两个表的公共部分"><a href="#内连接，两个表的公共部分" class="headerlink" title="内连接，两个表的公共部分"></a>内连接，两个表的公共部分</h1><p>格式：表名 (INNER) JOIN 表名 ON 连接条件</p><p><a name="b889a854"></a></p><h2 id="双表内连接查询"><a href="#双表内连接查询" class="headerlink" title="双表内连接查询"></a>双表内连接查询</h2><p>查询水果的供应商编码、名字、城市即对应的水果名称和价格</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token number">f</span><span class="token punctuation">.</span>SID<span class="token punctuation">,</span>S<span class="token punctuation">.</span>SNAME<span class="token punctuation">,</span>F<span class="token punctuation">.</span>name<span class="token punctuation">,</span>F<span class="token punctuation">.</span>price<span class="token punctuation">,</span>s<span class="token punctuation">.</span>city <span class="token keyword">FROM</span> fruits <span class="token keyword">AS</span> <span class="token number">f</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> suppliers <span class="token keyword">AS</span> S <span class="token keyword">ON</span> F<span class="token punctuation">.</span>SID <span class="token operator">=</span>S<span class="token punctuation">.</span>SID<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token number">f</span><span class="token punctuation">.</span>SID<span class="token punctuation">,</span>S<span class="token punctuation">.</span>SNAME<span class="token punctuation">,</span>F<span class="token punctuation">.</span>name<span class="token punctuation">,</span>F<span class="token punctuation">.</span>price<span class="token punctuation">,</span>s<span class="token punctuation">.</span>city <span class="token keyword">FROM</span> fruits <span class="token keyword">AS</span> <span class="token number">f</span> <span class="token keyword">JOIN</span> suppliers <span class="token keyword">AS</span> S <span class="token keyword">ON</span> F<span class="token punctuation">.</span>SID <span class="token operator">=</span>S<span class="token punctuation">.</span>SID<span class="token punctuation">;</span>SID    SNAME    name    price    city<span class="token number">101</span>    Supplies A    apple    <span class="token number">5.20</span>    Tianjin<span class="token number">101</span>    Supplies A    blackberry    <span class="token number">10.20</span>    Tianjin<span class="token number">102</span>    Supplies B    orange    <span class="token number">11.20</span>    Chongqing<span class="token number">105</span>    Supplies E    melon    <span class="token number">8.20</span>    Taiyuang<span class="token number">102</span>    Supplies B    banana    <span class="token number">10.30</span>    Chongqing<span class="token number">102</span>    Supplies B    grape    <span class="token number">5.30</span>    Chongqing<span class="token number">103</span>    Supplies C    coconut    <span class="token number">9.20</span>    Shanghai<span class="token number">101</span>    Supplies A    cherry    <span class="token number">3.20</span>    Tianjin<span class="token number">103</span>    Supplies C    apricot    <span class="token number">2.20</span>    Shanghai<span class="token number">104</span>    Supplies D    lemon    <span class="token number">6.40</span>    Zhongshan<span class="token number">104</span>    Supplies D    berry    <span class="token number">7.60</span>    Zhongshan<span class="token number">106</span>    Supplies F    mango    <span class="token number">15.60</span>    Beijing</code></pre><p>发现和上面普通查询一样</p><p><a name="dfe513ee"></a></p><h2 id="自连接查询，即双表是同一张表"><a href="#自连接查询，即双表是同一张表" class="headerlink" title="自连接查询，即双表是同一张表"></a>自连接查询，即双表是同一张表</h2><p>查询供应id为2的水果供应商提供的其他水果名称</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token number">f2</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span>F2<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token number">f2</span><span class="token punctuation">.</span>sid <span class="token keyword">FROM</span> fruits <span class="token keyword">AS</span> <span class="token number">f1</span> <span class="token keyword">JOIN</span> fruits <span class="token keyword">AS</span> F2 <span class="token keyword">ON</span> <span class="token number">f1</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> <span class="token number">f2</span><span class="token punctuation">.</span>sid <span class="token operator">AND</span> <span class="token number">f1</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>id    name    sid<span class="token number">1</span>    apple    <span class="token number">101</span><span class="token number">2</span>    blackberry    <span class="token number">101</span><span class="token number">8</span>    cherry    <span class="token number">101</span></code></pre><p>查询条件为表1，查询字段为表2</p><p><a name="e74aabfc"></a></p><h2 id="通过子句查询进行内链接"><a href="#通过子句查询进行内链接" class="headerlink" title="通过子句查询进行内链接"></a>通过子句查询进行内链接</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> fruits<span class="token punctuation">.</span>id<span class="token punctuation">,</span>fruits<span class="token punctuation">.</span>name<span class="token punctuation">,</span>fruits<span class="token punctuation">.</span>sid <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> fruits<span class="token punctuation">.</span>SID <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> fruits<span class="token punctuation">.</span>SID <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> fruits<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>id    name    sid<span class="token number">1</span>    apple    <span class="token number">101</span><span class="token number">2</span>    blackberry    <span class="token number">101</span><span class="token number">8</span>    cherry    <span class="token number">101</span></code></pre><p><a name="3f1b8d7a"></a></p><h1 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h1><p><a name="811ef322"></a></p><h2 id="左外连接，左表全部和左右表公共部分集合"><a href="#左外连接，左表全部和左右表公共部分集合" class="headerlink" title="左外连接，左表全部和左右表公共部分集合"></a>左外连接，左表全部和左右表公共部分集合</h2><p>格式： 表名 LEFT (OUTER) JOIN 表名 ON 条件</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># SUPPLIERS 为左表，显示全部内容</span><span class="token comment" spellcheck="true"># FRUITS 为右表，显示与左表公共部分</span><span class="token comment" spellcheck="true"># 右表其他内容显示为空，NULL</span><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>s<span class="token punctuation">.</span>sname<span class="token punctuation">,</span><span class="token number">f</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token number">f</span><span class="token punctuation">.</span>name <span class="token keyword">FROM</span> suppliers <span class="token keyword">AS</span> s <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> fruits <span class="token keyword">AS</span> <span class="token number">f</span> <span class="token keyword">ON</span> <span class="token number">f</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> s<span class="token punctuation">.</span>sid <span class="token punctuation">;</span>sid    sname    id    name<span class="token number">101</span>    Supplies A    <span class="token number">1</span>    apple<span class="token number">101</span>    Supplies A    <span class="token number">2</span>    blackberry<span class="token number">102</span>    Supplies B    <span class="token number">3</span>    orange<span class="token number">105</span>    Supplies E    <span class="token number">4</span>    melon<span class="token number">102</span>    Supplies B    <span class="token number">5</span>    banana<span class="token number">102</span>    Supplies B    <span class="token number">6</span>    grape<span class="token number">103</span>    Supplies C    <span class="token number">7</span>    coconut<span class="token number">101</span>    Supplies A    <span class="token number">8</span>    cherry<span class="token number">103</span>    Supplies C    <span class="token number">9</span>    apricot<span class="token number">104</span>    Supplies D    <span class="token number">10</span>    lemon<span class="token number">104</span>    Supplies D    <span class="token number">11</span>    berry<span class="token number">106</span>    Supplies F    <span class="token number">12</span>    mango<span class="token number">107</span>    Supplies G    <span class="token boolean">NULL</span>  <span class="token boolean">NULL</span></code></pre><p><a name="9da13b9e"></a></p><h2 id="右外连接，右表全部和左右表公共部分集合"><a href="#右外连接，右表全部和左右表公共部分集合" class="headerlink" title="右外连接，右表全部和左右表公共部分集合"></a>右外连接，右表全部和左右表公共部分集合</h2><blockquote><p>与左外连接相似,就是全部显示右表及公共部分</p></blockquote><p>格式： 表名 RIGHT (OUTER) JOIN 表名 ON 条件</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># SUPPLIERS 为左表，显示与右表公共部分</span><span class="token comment" spellcheck="true"># FRUITS 为右表，显示全部内容</span><span class="token comment" spellcheck="true"># 左表其他内容显示为空，NULL</span><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>s<span class="token punctuation">.</span>sname<span class="token punctuation">,</span><span class="token number">f</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token number">f</span><span class="token punctuation">.</span>name <span class="token keyword">FROM</span> suppliers <span class="token keyword">AS</span> s <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> fruits <span class="token keyword">AS</span> <span class="token number">f</span> <span class="token keyword">ON</span> <span class="token number">f</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> s<span class="token punctuation">.</span>sid <span class="token punctuation">;</span>sid    sname    id    name<span class="token number">101</span>    Supplies A    <span class="token number">1</span>    apple<span class="token number">101</span>    Supplies A    <span class="token number">2</span>    blackberry<span class="token number">102</span>    Supplies B    <span class="token number">3</span>    orange<span class="token number">105</span>    Supplies E    <span class="token number">4</span>    melon<span class="token number">102</span>    Supplies B    <span class="token number">5</span>    banana<span class="token number">102</span>    Supplies B    <span class="token number">6</span>    grape<span class="token number">103</span>    Supplies C    <span class="token number">7</span>    coconut<span class="token number">101</span>    Supplies A    <span class="token number">8</span>    cherry<span class="token number">103</span>    Supplies C    <span class="token number">9</span>    apricot<span class="token number">104</span>    Supplies D    <span class="token number">10</span>    lemon<span class="token number">104</span>    Supplies D    <span class="token number">11</span>    berry<span class="token number">106</span>    Supplies F    <span class="token number">12</span>    mango<span class="token boolean">NULL</span>  <span class="token boolean">NULL</span>    <span class="token number">13</span>    HHHHHH</code></pre><p><a name="8f5c198c"></a></p><h1 id="三表查询"><a href="#三表查询" class="headerlink" title="三表查询"></a>三表查询</h1><ul><li>表一和表二<code>sid</code>关联</li><li>表一和表三<code>id</code>关联</li></ul><p>查询供应商Supplies B供应的水果顾客购买量</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>  s<span class="token punctuation">.</span>city<span class="token punctuation">,</span>  s<span class="token punctuation">.</span>sName<span class="token punctuation">,</span>  <span class="token number">f</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>  p<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>  p<span class="token punctuation">.</span>num<span class="token keyword">FROM</span>  fruits <span class="token keyword">AS</span> F  <span class="token keyword">JOIN</span> suppliers <span class="token keyword">AS</span> s    <span class="token keyword">ON</span> <span class="token number">f</span><span class="token punctuation">.</span>sid <span class="token operator">=</span> s<span class="token punctuation">.</span>sid    <span class="token operator">AND</span> s<span class="token punctuation">.</span>sName <span class="token operator">=</span> <span class="token string">'Supplies B'</span>  <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> people <span class="token keyword">AS</span> p    <span class="token keyword">ON</span> <span class="token number">f</span><span class="token punctuation">.</span>id <span class="token operator">=</span> p<span class="token punctuation">.</span>id<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> p<span class="token punctuation">.</span>num <span class="token keyword">DESC</span><span class="token punctuation">;</span>city    sName    name    NAME    numChongqing    Supplies B    banana    E    <span class="token number">56</span>Chongqing    Supplies B    grape    F    <span class="token number">15</span>Chongqing    Supplies B    orange    C    <span class="token number">3</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> databases </tag>
            
            <tag> 数据库 </tag>
            
            <tag> web </tag>
            
            <tag> sql多表查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 教程：聚合函数</title>
      <link href="/databases-mysql-aggregate-function/"/>
      <url>/databases-mysql-aggregate-function/</url>
      
        <content type="html"><![CDATA[<p><a name="71cc4c7f"></a></p><h1 id="聚合函数特点"><a href="#聚合函数特点" class="headerlink" title="聚合函数特点"></a>聚合函数特点</h1><ol><li>组函数，将字段当作一个组进行统计，可结合分组<code>GROUP BY</code>联合使用</li><li>不用<code>GROUP BY</code>，中间结果集中的所有行自动形成一组，然后计算组合数</li><li>每个组函数接收一个参数（字段名或者表达式） 统计结果中默认忽略字段为<code>NULL</code>的记录，不参与计算</li><li>要想列值为<code>NULL</code>的行也参与组函数的计算，必须使用<code>IFNULL</code>函数对<code>NULL</code>值做转换。</li><li>不允许出现嵌套 比如<code>sum(max(...))</code></li></ol><p><a name="2d711b09"></a></p><h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>id    sid    name    price<span class="token number">1</span>    <span class="token number">101</span>    apple    <span class="token number">5.20</span><span class="token number">2</span>    <span class="token number">101</span>    blackberry    <span class="token number">10.20</span><span class="token number">3</span>    <span class="token number">102</span>    orange    <span class="token number">11.20</span><span class="token number">4</span>    <span class="token number">105</span>    melon    <span class="token number">8.20</span><span class="token number">5</span>    <span class="token number">102</span>    banana    <span class="token number">10.30</span><span class="token number">6</span>    <span class="token number">102</span>    grape    <span class="token number">5.30</span><span class="token number">7</span>    <span class="token number">103</span>    coconut    <span class="token number">9.20</span><span class="token number">8</span>    <span class="token number">101</span>    cherry    <span class="token number">3.20</span><span class="token number">9</span>    <span class="token number">103</span>    apricot    <span class="token number">2.20</span><span class="token number">10</span>    <span class="token number">104</span>    lemon    <span class="token number">6.40</span><span class="token number">11</span>    <span class="token number">104</span>    berry    <span class="token number">7.60</span><span class="token number">12</span>    <span class="token number">106</span>    mango    <span class="token number">15.60</span></code></pre><p><a name="ee828f04"></a></p><h1 id="COUNT-统计行的数量。非NULL值"><a href="#COUNT-统计行的数量。非NULL值" class="headerlink" title="COUNT(*) 统计行的数量。非NULL值"></a>COUNT(*) 统计行的数量。非NULL值</h1><p><a name="0784c2bb"></a></p><h2 id="统计id和sid-的行数"><a href="#统计id和sid-的行数" class="headerlink" title="统计id和sid 的行数"></a>统计id和sid 的行数</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span><span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token function">count</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span><span class="token number">12</span>    <span class="token number">12</span></code></pre><p><a name="08ab268e"></a></p><h2 id="统计当sid为103时id的行数"><a href="#统计当sid为103时id的行数" class="headerlink" title="统计当sid为103时id的行数"></a>统计当sid为103时id的行数</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> SID <span class="token operator">=</span> <span class="token number">103</span><span class="token punctuation">;</span><span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token number">2</span></code></pre><p><a name="6f40e06e"></a></p><h2 id="DISTINCT-过滤掉重复行"><a href="#DISTINCT-过滤掉重复行" class="headerlink" title="DISTINCT 过滤掉重复行"></a>DISTINCT 过滤掉重复行</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>Sid<span class="token punctuation">)</span> <span class="token keyword">AS</span> SID <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>SID<span class="token number">12</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> Sid<span class="token punctuation">)</span> <span class="token keyword">AS</span> SID <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span>SID<span class="token number">6</span></code></pre><p><a name="a8cf1578"></a></p><h1 id="MAX-最大值"><a href="#MAX-最大值" class="headerlink" title="MAX(*) 最大值"></a>MAX(*) 最大值</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span><span class="token function">max</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token number">12</span></code></pre><p><a name="1a441977"></a></p><h1 id="MIN-最小值"><a href="#MIN-最小值" class="headerlink" title="MIN(*) 最小值"></a>MIN(*) 最小值</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits<span class="token punctuation">;</span><span class="token function">min</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token number">1</span></code></pre><p><a name="714b468f"></a></p><h1 id="AVG-平均值"><a href="#AVG-平均值" class="headerlink" title="AVG(*) 平均值"></a>AVG(*) 平均值</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> ID <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">AVG</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token number">8.866667</span></code></pre><p><a name="6ecc704c"></a></p><h1 id="SUM-累加和"><a href="#SUM-累加和" class="headerlink" title="SUM(*) 累加和"></a>SUM(*) 累加和</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">FROM</span> fruits <span class="token keyword">WHERE</span> SID <span class="token operator">=</span> <span class="token number">102</span><span class="token punctuation">;</span><span class="token function">SUM</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token number">26.80</span></code></pre><p><a name="6378002c"></a></p><h1 id="GROUP-BY-组合使用"><a href="#GROUP-BY-组合使用" class="headerlink" title="GROUP BY 组合使用"></a>GROUP BY 组合使用</h1><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>  <span class="token function">MAX</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">MIN</span><span class="token punctuation">(</span>SID<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">COUNT</span><span class="token punctuation">(</span>SID<span class="token punctuation">)</span><span class="token punctuation">,</span>  GROUP_CONCAT<span class="token punctuation">(</span>NAME<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">AVG</span><span class="token punctuation">(</span>PRICE<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>PRICE<span class="token punctuation">)</span><span class="token keyword">FROM</span>  fruits<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> SID<span class="token punctuation">;</span><span class="token function">MAX</span><span class="token punctuation">(</span>ID<span class="token punctuation">)</span>    <span class="token function">MIN</span><span class="token punctuation">(</span>SID<span class="token punctuation">)</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span>SID<span class="token punctuation">)</span>    group_concat<span class="token punctuation">(</span>NAME<span class="token punctuation">)</span>    <span class="token function">AVG</span><span class="token punctuation">(</span>PRICE<span class="token punctuation">)</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>PRICE<span class="token punctuation">)</span><span class="token number">8</span>    <span class="token number">101</span>    <span class="token number">3</span>    apple<span class="token punctuation">,</span>blackberry<span class="token punctuation">,</span>cherry    <span class="token number">6.200000</span>    <span class="token number">18.60</span><span class="token number">6</span>    <span class="token number">102</span>    <span class="token number">3</span>    orange<span class="token punctuation">,</span>banana<span class="token punctuation">,</span>grape    <span class="token number">8.933333</span>    <span class="token number">26.80</span><span class="token number">9</span>    <span class="token number">103</span>    <span class="token number">2</span>    coconut<span class="token punctuation">,</span>apricot    <span class="token number">5.700000</span>    <span class="token number">11.40</span><span class="token number">11</span>    <span class="token number">104</span>    <span class="token number">2</span>    lemon<span class="token punctuation">,</span>berry    <span class="token number">7.000000</span>    <span class="token number">14.00</span><span class="token number">4</span>    <span class="token number">105</span>    <span class="token number">1</span>    melon    <span class="token number">8.200000</span>    <span class="token number">8.20</span><span class="token number">12</span>    <span class="token number">106</span>    <span class="token number">1</span>    mango    <span class="token number">15.600000</span>    <span class="token number">15.60</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> databases </tag>
            
            <tag> 数据库 </tag>
            
            <tag> web </tag>
            
            <tag> sql聚合函数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
